import telebot
from config import keys, TOKEN
from utils import ConvertionException, CryptoApeConverter

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start', 'help'])
def start_message(message):
    bot.send_message(message.chat.id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.chat.username} üçå"
                                    f"\n"
                                    f"\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –≤–≤–µ–¥–∏—Ç–µ "
                                    f"–∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:"
                                    f"\n"
                                    f"\n<–Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã><–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏>"
                                    f"<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π –≤–∞–ª—é—Ç—ã>"
                                    f"\n"
                                    f"\n–£–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç: /values")

@bot.message_handler(commands=['values'])
def values(message: telebot.types.Message):
    text = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:'
    for key in keys.keys():
        text = '\n\n'.join((text, key, ))
    bot.reply_to(message, text)


@bot.message_handler(content_types=['text', ])
def convert(message: telebot.types.Message):
    try:
        values = message.text.split(' ')

        if len(values) != 3:
            raise ConvertionException('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ/–º–∞–ª–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥:')

        quote, base, amount = values
        total_base = CryptoApeConverter.get_price(quote, base, amount)
    except ConvertionException as e:
        bot.reply_to(message, f'–û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n{e}')
    except Exception as e:
        bot.reply_to(message, f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n{e}')
    else:
        text = f'–¶–µ–Ω–∞ {amount} {quote} –≤ {base} - {total_base}'
        bot.send_message(message.chat.id, text)


bot.polling()



